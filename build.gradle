group = "com.codegans.ai.cup2016"
version = "1.0"

buildscript {
  repositories {
    jcenter()
//    maven {
//      url "http://bicsjava.bc/nexus/content/groups/public"
//    }
  }

  dependencies {
    classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M2'
  }
}

repositories {
  jcenter()
//  maven {
//    url "http://bicsjava.bc/nexus/content/groups/public"
//  }
}

apply plugin: "java"
apply plugin: 'org.junit.platform.gradle.plugin'

sourceCompatibility = "1.8"
targetCompatibility = "1.8"
compileJava.options.encoding = "UTF-8"

def junitJupiterVersion = '5.0.0-M2'
def slf4jVersion = '1.7.21'
def logbackVersion = '1.1.7'

dependencies {
  testCompile "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
  testRuntime "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"

  testCompile "org.slf4j:slf4j-api:${slf4jVersion}"
  testRuntime "org.slf4j:jul-to-slf4j:${slf4jVersion}"

  testRuntime "ch.qos.logback:logback-classic:${logbackVersion}"
  testRuntime "ch.qos.logback:logback-core:${logbackVersion}"
}

task copySources(type: Sync) {
  into "$buildDir/tmpSources"
  from("src/main/java") {
    include "model/*.java"
    include "*Strategy.java"
    exclude "**/visualize"
    exclude "**/VisualLogger"
  }
  from fileTree("src/main/java/${project.group.replace('.', '/')}").files
}

task fixSources(type: Sync, dependsOn: copySources) {
  def importStatement = "import " + project.group
  def packageStatement = "package " + project.group

  into "$buildDir/sources"
  from "$buildDir/tmpSources"
  eachFile { detail ->
    detail.file.text = detail.file.text
            .replace(packageStatement, "//" + packageStatement)
            .replace(importStatement, "//" + importStatement)
            .replaceAll("(?ms)/\\*\\*.*?\\*/", "")
            .replaceAll("//.*", "")

  }
}

task zipSources(type: Zip) {
  classifier = 'src'
  from "$buildDir/sources"
  include "*.java"
  exclude "Strategy.java"
}

task testSources(type: JavaCompile) {
  source = "$buildDir/sources"
  include "*.java"
  include "model/*.java"
  classpath = sourceSets.main.compileClasspath
  destinationDir = file("$buildDir/testSources")
}

//testSources.options.compilerArgs = ["-sourcepath", "$buildDir/sources"]
testSources.options.encoding = "UTF-8"

processResources.dependsOn += fixSources
assemble.dependsOn += zipSources
testClasses.dependsOn += testSources

task wrapper(type: Wrapper) {
  gradleVersion = "3.2"
}
